---
#- name: Install base packages
#  apt:
#    name: "{{ item }}"
#    state: "present"
#  with_items:
#    - postgresql-contrib
#    - postgresql
#    - python3-venv
#    - python3-pip
#
#- name: Create Python virtual environment
#  ansible.builtin.command:
#    cmd: python3 -m venv /home/antonioma/python-venv
#    creates: /home/antonioma/python-venv/bin/activate
#
#- name: Install psycopg2 library
#  pip:
#    name: psycopg2-binary
#    virtualenv: /home/antonioma/python-venv
#  become: yes
#
#- name: Set python interpreter to virtualenv
#  set_fact:
#    ansible_python_interpreter: /home/antonioma/python-venv/bin/python
#
#- name: Ensure PostgreSQL is started before query
#  ansible.builtin.systemd:
#    name: postgresql
#    state: started
#  when: inventory_hostname in groups['psql_master']
#
#- name: modify postgresql.conf
#  lineinfile:
#    path: "/etc/postgresql/{{ psql_version }}/main/postgresql.conf"
#    regexp: "^{{ item.regex }}"
#    line: "{{ item.value }}"
#  with_items:
#    - { regex: listen_addresses , value: "listen_addresses = '{{ master_ip }}'" }
#    - { regex: wal_level, value: "wal_level = logical" }
#    - { regex: wal_log_hints, value: "wal_log_hints = on" }
#    - { regex: max_wal_senders, value: "max_wal_senders = 2" }
#  when: inventory_hostname in groups['psql_master']
#
##- name: modify pg_hba.conf
##  lineinfile:
##    path: "/etc/postgresql/{{ psql_version }}/pg_hba.conf"
##    regexp: '^{{ item.regex }}'
##    line: "{{ item.value }}"
##  with_items:
##    - { regex: 'host\s{1,}replication\s{1,}{{ pg_replica_user }}\s{1,}127.0.0.1/32\s{1,}md5' , value: "host replication {{ pg_replica_user }} 127.0.0.1/32 md5" }
##    - { regex: 'host\s{1,}replication\s{1,}{{ pg_replica_user }}\s{1,}{{ pg_interface }}/32\s{1,}md5' , value: "host replication {{ pg_replica_user }} {{ pg_interface }}/32 md5" }
##    - { regex: 'host\s{1,}replication\s{1,}{{ pg_replica_user }}\s{1,}{{ pg_slave }}/32\s{1,}md5' , value: "host replication {{ pg_replica_user }} {{ pg_slave }}/32 md5" }
##  when: inventory_hostname in groups['psql_master']
#
#- name: Configure hba replica user
#  ansible.builtin.lineinfile:
#    path: /etc/postgresql/{{ psql_version }}/main/pg_hba.conf
#    insertafter: '# repliacation privilege'
#    line: "hostssl all {{ replica_role }} {{ master_ip }}/24 md5"
#  when: inventory_hostname in groups['psql_master']
#
#- name: Configure hba default user
#  ansible.builtin.lineinfile:
#    path: /etc/postgresql/{{ psql_version }}/main/pg_hba.conf
#    insertafter: '# repliacation privilege'
#    line: "hostssl all postgres {{ master_ip }}/24 md5"
#  when: inventory_hostname in groups['psql_master']
#
#- name: Restart postgresql Server
#  ansible.builtin.systemd_service:
#    state: restarted
#    daemon_reload: true
#    name: postgresql
#  when: inventory_hostname in groups['psql_master']
#
#- name: Create Replication User
#  become: yes
#  become_user: postgres
#  postgresql_query:
#    query: CREATE ROLE  {{ replica_role }} WITH REPLICATION LOGIN PASSWORD  '{{ replica_password }}'
#  when: inventory_hostname in groups['psql_master']
#  no_log: true
#  ignore_errors: true

- name: Set Replicas Configuration
  include_tasks: replicas.yaml
  when: inventory_hostname in groups['postgresql-replicas']